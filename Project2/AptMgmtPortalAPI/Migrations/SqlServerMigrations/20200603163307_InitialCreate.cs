using Microsoft.EntityFrameworkCore.Migrations;

namespace AptMgmtPortalAPI.Migrations.SqlServerMigrations
{
    public partial class InitialCreate : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Agreements",
                columns: table => new
                {
                    AgreementId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TenantId = table.Column<int>(nullable: false),
                    AgreementTemplateId = table.Column<int>(nullable: false),
                    SignedDate = table.Column<string>(type: "NVARCHAR(48)", nullable: true),
                    StartDate = table.Column<string>(type: "NVARCHAR(48)", nullable: false),
                    EndDate = table.Column<string>(type: "NVARCHAR(48)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Agreements", x => x.AgreementId);
                });

            migrationBuilder.CreateTable(
                name: "AgreementTemplates",
                columns: table => new
                {
                    AgreementTemplateId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Title = table.Column<string>(nullable: true),
                    Text = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AgreementTemplates", x => x.AgreementTemplateId);
                });

            migrationBuilder.CreateTable(
                name: "BillingPeriods",
                columns: table => new
                {
                    BillingPeriodId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PeriodStart = table.Column<string>(type: "NVARCHAR(48)", nullable: false),
                    PeriodEnd = table.Column<string>(type: "NVARCHAR(48)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BillingPeriods", x => x.BillingPeriodId);
                });

            migrationBuilder.CreateTable(
                name: "MaintenanceRequests",
                columns: table => new
                {
                    MaintenanceRequestId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TimeOpened = table.Column<string>(type: "NVARCHAR(48)", nullable: false),
                    TimeClosed = table.Column<string>(type: "NVARCHAR(48)", nullable: true),
                    OpeningUserId = table.Column<int>(nullable: false),
                    ClosingUserId = table.Column<int>(nullable: true),
                    MaintenanceRequestType = table.Column<string>(nullable: true),
                    CloseReason = table.Column<string>(nullable: true),
                    OpenNotes = table.Column<string>(nullable: true),
                    ResolutionNotes = table.Column<string>(nullable: true),
                    InternalNotes = table.Column<string>(nullable: true),
                    UnitNumber = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaintenanceRequests", x => x.MaintenanceRequestId);
                });

            migrationBuilder.CreateTable(
                name: "Payments",
                columns: table => new
                {
                    PaymentId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Amount = table.Column<double>(nullable: false),
                    ResourceType = table.Column<int>(nullable: false),
                    TimePaid = table.Column<string>(type: "NVARCHAR(48)", nullable: false),
                    BillingPeriodId = table.Column<int>(nullable: false),
                    TenantId = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Payments", x => x.PaymentId);
                });

            migrationBuilder.CreateTable(
                name: "ResourceUsageRates",
                columns: table => new
                {
                    ResourceUsageRateId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ResourceType = table.Column<int>(nullable: false),
                    Rate = table.Column<double>(nullable: false),
                    PeriodStart = table.Column<string>(type: "NVARCHAR(48)", nullable: false),
                    PeriodEnd = table.Column<string>(type: "NVARCHAR(48)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceUsageRates", x => x.ResourceUsageRateId);
                });

            migrationBuilder.CreateTable(
                name: "TenantResourceUsages",
                columns: table => new
                {
                    TenantResourceUsageId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SampleTime = table.Column<string>(type: "NVARCHAR(48)", nullable: false),
                    UsageAmount = table.Column<double>(nullable: false),
                    ResourceType = table.Column<int>(nullable: false),
                    TenantId = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TenantResourceUsages", x => x.TenantResourceUsageId);
                });

            migrationBuilder.CreateTable(
                name: "Tenants",
                columns: table => new
                {
                    TenantId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PhoneNumber = table.Column<string>(nullable: true),
                    Email = table.Column<string>(nullable: true),
                    FirstName = table.Column<string>(nullable: true),
                    LastName = table.Column<string>(nullable: true),
                    UserId = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Tenants", x => x.TenantId);
                });

            migrationBuilder.CreateTable(
                name: "Units",
                columns: table => new
                {
                    UnitId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UnitNumber = table.Column<string>(nullable: true),
                    TenantId = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Units", x => x.UnitId);
                });

            migrationBuilder.CreateTable(
                name: "Users",
                columns: table => new
                {
                    UserId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserAccountType = table.Column<string>(nullable: false),
                    LoginName = table.Column<string>(nullable: true),
                    Password = table.Column<string>(nullable: true),
                    ApiKey = table.Column<string>(nullable: true),
                    FirstName = table.Column<string>(nullable: true),
                    LastName = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Users", x => x.UserId);
                });

            migrationBuilder.InsertData(
                table: "AgreementTemplates",
                columns: new[] { "AgreementTemplateId", "Text", "Title" },
                values: new object[,]
                {
                    { 1, "This is a really long lease agreement text", "Lease Agreement" },
                    { 3, "This is a really long internet connection agreement text", "Internet Connection Agreement" },
                    { 2, "This is a really long utility agreement text", "Utility Agreement" }
                });

            migrationBuilder.InsertData(
                table: "Agreements",
                columns: new[] { "AgreementId", "AgreementTemplateId", "EndDate", "SignedDate", "StartDate", "TenantId" },
                values: new object[,]
                {
                    { 10, 1, "2020-06-03 09:33:07.0932196", "2020-03-05 09:33:07.0856376", "2020-03-05 09:33:07.0856376", 10 },
                    { 9, 3, "2020-06-03 09:33:07.0932193", "2019-06-09 09:33:07.0856376", "2019-06-09 09:33:07.0856376", 9 },
                    { 8, 2, "2020-06-03 09:33:07.0932191", "2019-12-06 09:33:07.0856376", "2019-12-06 09:33:07.0856376", 8 },
                    { 1, 1, "2020-06-03 09:33:07.0931141", "2020-03-05 09:33:07.0856376", "2020-03-05 09:33:07.0856376", 1 },
                    { 6, 3, "2020-06-03 09:33:07.0932184", "2019-06-09 09:33:07.0856376", "2019-06-09 09:33:07.0856376", 6 },
                    { 5, 2, "2020-06-03 09:33:07.093218", "2019-12-06 09:33:07.0856376", "2019-12-06 09:33:07.0856376", 5 },
                    { 4, 1, "2020-06-03 09:33:07.0932176", "2020-03-05 09:33:07.0856376", "2020-03-05 09:33:07.0856376", 4 },
                    { 3, 3, "2020-06-03 09:33:07.0932173", "2019-06-09 09:33:07.0856376", "2019-06-09 09:33:07.0856376", 3 },
                    { 2, 2, "2020-06-03 09:33:07.0932135", "2019-12-06 09:33:07.0856376", "2019-12-06 09:33:07.0856376", 2 },
                    { 7, 1, "2020-06-03 09:33:07.0932188", "2020-03-05 09:33:07.0856376", "2020-03-05 09:33:07.0856376", 7 }
                });

            migrationBuilder.InsertData(
                table: "BillingPeriods",
                columns: new[] { "BillingPeriodId", "PeriodEnd", "PeriodStart" },
                values: new object[,]
                {
                    { 1, "2020-06-04 09:33:07.0951274", "2020-05-04 09:33:07.0856376" },
                    { 2, "2020-06-04 09:33:07.095183", "2020-03-05 09:33:07.0856376" },
                    { 3, "2020-06-04 09:33:07.0951859", "2019-12-06 09:33:07.0856376" },
                    { 4, "2020-06-04 09:33:07.0951863", "2019-06-09 09:33:07.0856376" }
                });

            migrationBuilder.InsertData(
                table: "MaintenanceRequests",
                columns: new[] { "MaintenanceRequestId", "CloseReason", "ClosingUserId", "InternalNotes", "MaintenanceRequestType", "OpenNotes", "OpeningUserId", "ResolutionNotes", "TimeClosed", "TimeOpened", "UnitNumber" },
                values: new object[,]
                {
                    { 7, null, null, "Call Plumber", null, "No water", 5, null, null, "2020-03-05 09:33:07.0856376", "105" },
                    { 10, null, null, "Call Plumber", null, "No water", 8, null, null, "2020-03-05 09:33:07.0856376", "108" },
                    { 8, null, null, "Call Plumber", null, "No water", 6, null, null, "2020-03-05 09:33:07.0856376", "106" },
                    { 6, null, null, "Call Plumber", null, "No water", 4, null, null, "2020-03-05 09:33:07.0856376", "104" },
                    { 9, null, null, "Call Plumber", null, "No water", 7, null, null, "2020-03-05 09:33:07.0856376", "107" },
                    { 4, "CanceledByTenant", 1, "Call Plumber", null, "No water", 2, "Fixed", "2020-05-04 09:33:07.0856376", "2020-03-05 09:33:07.0856376", "102" },
                    { 3, "CanceledByManagement", 1, "Call Plumber", null, "No water", 1, "Fixed", "2020-05-04 09:33:07.0856376", "2019-12-06 09:33:07.0856376", "101" },
                    { 2, "Completed", 1, "Call Comcast", null, "No Interet", 1, "Fixed", "2020-05-04 09:33:07.0856376", "2020-03-05 09:33:07.0856376", "101" },
                    { 1, "Completed", 1, "Call Plumber", "Plumbing", "No water", 1, "Fully restored.", "2020-06-03 09:33:07.0946894", "2020-03-05 09:33:07.0856376", "101" },
                    { 5, "CanceledByManagement", 2, "Call Plumber", null, "No water", 3, "Fixed", "2020-05-04 09:33:07.0856376", "2020-03-05 09:33:07.0856376", "103" }
                });

            migrationBuilder.InsertData(
                table: "Payments",
                columns: new[] { "PaymentId", "Amount", "BillingPeriodId", "ResourceType", "TenantId", "TimePaid" },
                values: new object[,]
                {
                    { 28, 100.11, 1, 4, 6, "2020-06-02 09:33:07.0940399" },
                    { 29, 100.11, 1, 3, 6, "2020-06-02 09:33:07.0940402" },
                    { 30, 100.11, 1, 1, 6, "2020-06-02 09:33:07.0940405" },
                    { 31, 100.11, 1, 2, 7, "2020-06-02 09:33:07.0940408" },
                    { 32, 100.11, 1, 0, 7, "2020-06-02 09:33:07.094041" },
                    { 33, 100.11, 1, 4, 7, "2020-06-02 09:33:07.0940413" },
                    { 34, 100.11, 1, 3, 7, "2020-06-02 09:33:07.0940415" },
                    { 35, 100.11, 1, 1, 7, "2020-06-02 09:33:07.0940418" },
                    { 36, 100.11, 1, 2, 8, "2020-06-02 09:33:07.0940421" },
                    { 37, 100.11, 1, 0, 8, "2020-06-02 09:33:07.0940423" },
                    { 38, 100.11, 1, 4, 8, "2020-06-02 09:33:07.0940426" },
                    { 40, 100.11, 1, 1, 8, "2020-06-02 09:33:07.0940431" },
                    { 41, 100.11, 1, 2, 9, "2020-06-02 09:33:07.0940434" },
                    { 42, 100.11, 1, 0, 9, "2020-06-02 09:33:07.0940436" },
                    { 43, 100.11, 1, 4, 9, "2020-06-02 09:33:07.0940439" },
                    { 44, 100.11, 1, 3, 9, "2020-06-02 09:33:07.0940445" },
                    { 45, 100.11, 1, 1, 9, "2020-06-02 09:33:07.0940448" },
                    { 47, 100.11, 1, 0, 10, "2020-06-02 09:33:07.0940453" },
                    { 48, 100.11, 1, 4, 10, "2020-06-02 09:33:07.0940457" },
                    { 49, 100.11, 1, 3, 10, "2020-06-02 09:33:07.0940459" },
                    { 50, 100.11, 1, 1, 10, "2020-06-02 09:33:07.0940462" },
                    { 27, 100.11, 1, 0, 6, "2020-06-02 09:33:07.0940396" },
                    { 39, 100.11, 1, 3, 8, "2020-06-02 09:33:07.0940429" },
                    { 26, 100.11, 1, 2, 6, "2020-06-02 09:33:07.0940394" },
                    { 46, 100.11, 1, 2, 10, "2020-06-02 09:33:07.094045" },
                    { 24, 100.11, 1, 3, 5, "2020-06-02 09:33:07.0940387" },
                    { 25, 100.11, 1, 1, 5, "2020-06-02 09:33:07.094039" },
                    { 1, 100.11, 1, 2, 1, "2020-06-02 09:33:07.0939732" },
                    { 2, 100.11, 1, 0, 1, "2020-06-02 09:33:07.0940301" },
                    { 3, 100.11, 1, 4, 1, "2020-06-02 09:33:07.0940326" },
                    { 5, 100.11, 1, 1, 1, "2020-06-02 09:33:07.0940333" },
                    { 6, 100.11, 1, 2, 2, "2020-06-02 09:33:07.0940336" },
                    { 7, 100.11, 1, 0, 2, "2020-06-02 09:33:07.0940339" },
                    { 8, 100.11, 1, 4, 2, "2020-06-02 09:33:07.0940343" },
                    { 9, 100.11, 1, 3, 2, "2020-06-02 09:33:07.0940346" },
                    { 10, 100.11, 1, 1, 2, "2020-06-02 09:33:07.0940349" },
                    { 11, 100.11, 1, 2, 3, "2020-06-02 09:33:07.0940351" },
                    { 4, 100.11, 1, 3, 1, "2020-06-02 09:33:07.0940329" },
                    { 13, 100.11, 1, 4, 3, "2020-06-02 09:33:07.0940357" },
                    { 14, 100.11, 1, 3, 3, "2020-06-02 09:33:07.094036" },
                    { 15, 100.11, 1, 1, 3, "2020-06-02 09:33:07.0940362" },
                    { 16, 100.11, 1, 2, 4, "2020-06-02 09:33:07.0940365" },
                    { 17, 100.11, 1, 0, 4, "2020-06-02 09:33:07.0940368" },
                    { 18, 100.11, 1, 4, 4, "2020-06-02 09:33:07.0940371" },
                    { 19, 100.11, 1, 3, 4, "2020-06-02 09:33:07.0940374" },
                    { 23, 100.11, 1, 4, 5, "2020-06-02 09:33:07.0940384" },
                    { 20, 100.11, 1, 1, 4, "2020-06-02 09:33:07.0940376" },
                    { 21, 100.11, 1, 2, 5, "2020-06-02 09:33:07.0940379" },
                    { 22, 100.11, 1, 0, 5, "2020-06-02 09:33:07.0940381" },
                    { 12, 100.11, 1, 0, 3, "2020-06-02 09:33:07.0940354" }
                });

            migrationBuilder.InsertData(
                table: "ResourceUsageRates",
                columns: new[] { "ResourceUsageRateId", "PeriodEnd", "PeriodStart", "Rate", "ResourceType" },
                values: new object[,]
                {
                    { 5, "2020-11-30 09:33:07.0936159", "2019-12-06 09:33:07.0856376", 1.75, 1 },
                    { 3, "2020-11-30 09:33:07.0936152", "2019-12-06 09:33:07.0856376", 1100.0, 4 },
                    { 4, "2020-11-30 09:33:07.0936156", "2019-12-06 09:33:07.0856376", 20.550000000000001, 3 },
                    { 1, "2020-11-30 09:33:07.0935122", "2019-12-06 09:33:07.0856376", 40.450000000000003, 2 },
                    { 2, "2020-11-30 09:33:07.093612", "2019-12-06 09:33:07.0856376", 3.4500000000000002, 0 }
                });

            migrationBuilder.InsertData(
                table: "TenantResourceUsages",
                columns: new[] { "TenantResourceUsageId", "ResourceType", "SampleTime", "TenantId", "UsageAmount" },
                values: new object[,]
                {
                    { 168, 1, "2020-05-25 09:33:07.0927266", 6, 16.600000000000001 },
                    { 157, 0, "2020-05-26 09:33:07.0927234", 6, 21.359999999999999 },
                    { 158, 0, "2020-05-25 09:33:07.0927237", 6, 20.530000000000001 },
                    { 159, 0, "2020-05-24 09:33:07.092724", 6, 20.73 },
                    { 160, 0, "2020-05-23 09:33:07.0927242", 6, 20.210000000000001 },
                    { 161, 1, "2020-06-01 09:33:07.0927245", 6, 10.41 },
                    { 162, 1, "2020-05-31 09:33:07.0927248", 6, 15.42 },
                    { 163, 1, "2020-05-30 09:33:07.0927252", 6, 16.43 },
                    { 164, 1, "2020-05-29 09:33:07.0927255", 6, 11.460000000000001 },
                    { 165, 1, "2020-05-28 09:33:07.0927257", 6, 10.17 },
                    { 166, 1, "2020-05-27 09:33:07.092726", 6, 16.93 },
                    { 167, 1, "2020-05-26 09:33:07.0927263", 6, 15.74 },
                    { 156, 0, "2020-05-27 09:33:07.0927232", 6, 20.07 },
                    { 169, 1, "2020-05-24 09:33:07.0927269", 6, 14.41 },
                    { 183, 1, "2020-05-30 09:33:07.0927307", 7, 36.43 },
                    { 171, 0, "2020-06-01 09:33:07.0927275", 7, 30.460000000000001 },
                    { 172, 0, "2020-05-31 09:33:07.0927277", 7, 39.850000000000001 },
                    { 173, 0, "2020-05-30 09:33:07.092728", 7, 35.329999999999998 },
                    { 174, 0, "2020-05-29 09:33:07.0927283", 7, 30.670000000000002 },
                    { 175, 0, "2020-05-28 09:33:07.0927286", 7, 30.780000000000001 },
                    { 176, 0, "2020-05-27 09:33:07.0927288", 7, 35.07 },
                    { 177, 0, "2020-05-26 09:33:07.0927291", 7, 31.359999999999999 },
                    { 178, 0, "2020-05-25 09:33:07.0927294", 7, 30.530000000000001 },
                    { 179, 0, "2020-05-24 09:33:07.0927296", 7, 30.73 },
                    { 180, 0, "2020-05-23 09:33:07.0927299", 7, 30.210000000000001 },
                    { 181, 1, "2020-06-01 09:33:07.0927302", 7, 30.41 },
                    { 182, 1, "2020-05-31 09:33:07.0927305", 7, 35.420000000000002 },
                    { 155, 0, "2020-05-28 09:33:07.0927228", 6, 20.780000000000001 },
                    { 184, 1, "2020-05-29 09:33:07.092731", 7, 31.460000000000001 },
                    { 170, 1, "2020-05-23 09:33:07.0927272", 6, 16.32 },
                    { 154, 0, "2020-05-29 09:33:07.0927166", 6, 20.670000000000002 },
                    { 139, 0, "2020-05-24 09:33:07.0927125", 5, 10.73 },
                    { 152, 0, "2020-05-31 09:33:07.0927161", 6, 20.850000000000001 },
                    { 185, 1, "2020-05-28 09:33:07.0927313", 7, 30.170000000000002 },
                    { 123, 1, "2020-05-30 09:33:07.0927082", 4, 16.43 },
                    { 124, 1, "2020-05-29 09:33:07.0927084", 4, 11.460000000000001 },
                    { 125, 1, "2020-05-28 09:33:07.0927087", 4, 10.17 },
                    { 126, 1, "2020-05-27 09:33:07.092709", 4, 16.93 },
                    { 127, 1, "2020-05-26 09:33:07.0927092", 4, 15.74 },
                    { 128, 1, "2020-05-25 09:33:07.0927095", 4, 26.600000000000001 },
                    { 129, 1, "2020-05-24 09:33:07.0927098", 4, 4.4100000000000001 },
                    { 130, 1, "2020-05-23 09:33:07.09271", 4, 16.32 },
                    { 131, 0, "2020-06-01 09:33:07.0927103", 5, 10.460000000000001 },
                    { 132, 0, "2020-05-31 09:33:07.0927106", 5, 19.850000000000001 },
                    { 133, 0, "2020-05-30 09:33:07.0927109", 5, 15.33 },
                    { 134, 0, "2020-05-29 09:33:07.0927112", 5, 10.67 },
                    { 135, 0, "2020-05-28 09:33:07.0927115", 5, 10.779999999999999 },
                    { 136, 0, "2020-05-27 09:33:07.0927118", 5, 10.07 },
                    { 137, 0, "2020-05-26 09:33:07.092712", 5, 11.359999999999999 },
                    { 138, 0, "2020-05-25 09:33:07.0927123", 5, 10.529999999999999 },
                    { 140, 0, "2020-05-23 09:33:07.0927128", 5, 10.210000000000001 },
                    { 141, 1, "2020-06-01 09:33:07.0927131", 5, 11.41 },
                    { 142, 1, "2020-05-31 09:33:07.0927134", 5, 11.42 },
                    { 143, 1, "2020-05-30 09:33:07.0927136", 5, 16.43 },
                    { 144, 1, "2020-05-29 09:33:07.0927139", 5, 11.460000000000001 },
                    { 145, 1, "2020-05-28 09:33:07.0927141", 5, 10.17 },
                    { 146, 1, "2020-05-27 09:33:07.0927144", 5, 11.93 },
                    { 147, 1, "2020-05-26 09:33:07.0927147", 5, 11.74 },
                    { 148, 1, "2020-05-25 09:33:07.0927149", 5, 11.6 },
                    { 149, 1, "2020-05-24 09:33:07.0927152", 5, 11.41 },
                    { 150, 1, "2020-05-23 09:33:07.0927156", 5, 11.32 },
                    { 151, 0, "2020-06-01 09:33:07.0927158", 6, 20.460000000000001 },
                    { 153, 0, "2020-05-30 09:33:07.0927164", 6, 25.329999999999998 },
                    { 186, 1, "2020-05-27 09:33:07.0927316", 7, 36.93 },
                    { 227, 1, "2020-05-26 09:33:07.0927429", 9, 5.7400000000000002 },
                    { 188, 1, "2020-05-25 09:33:07.0927321", 7, 36.600000000000001 },
                    { 222, 1, "2020-05-31 09:33:07.0927416", 9, 25.420000000000002 },
                    { 223, 1, "2020-05-30 09:33:07.0927418", 9, 26.43 },
                    { 224, 1, "2020-05-29 09:33:07.0927421", 9, 21.460000000000001 },
                    { 225, 1, "2020-05-28 09:33:07.0927424", 9, 20.170000000000002 },
                    { 226, 1, "2020-05-27 09:33:07.0927426", 9, 6.9299999999999997 },
                    { 122, 1, "2020-05-31 09:33:07.0927079", 4, 30.420000000000002 },
                    { 228, 1, "2020-05-25 09:33:07.0927432", 9, 6.5999999999999996 },
                    { 229, 1, "2020-05-24 09:33:07.0927434", 9, 4.4100000000000001 },
                    { 230, 1, "2020-05-23 09:33:07.0927437", 9, 6.3200000000000003 },
                    { 231, 0, "2020-06-01 09:33:07.092744", 10, 30.460000000000001 },
                    { 232, 0, "2020-05-31 09:33:07.0927443", 10, 29.850000000000001 },
                    { 233, 0, "2020-05-30 09:33:07.0927445", 10, 35.329999999999998 },
                    { 234, 0, "2020-05-29 09:33:07.0927448", 10, 30.670000000000002 },
                    { 235, 0, "2020-05-28 09:33:07.0927451", 10, 30.780000000000001 },
                    { 236, 0, "2020-05-27 09:33:07.0927453", 10, 10.07 },
                    { 237, 0, "2020-05-26 09:33:07.0927456", 10, 10.359999999999999 },
                    { 238, 0, "2020-05-25 09:33:07.0927458", 10, 10.529999999999999 },
                    { 239, 0, "2020-05-24 09:33:07.0927462", 10, 10.73 },
                    { 240, 0, "2020-05-23 09:33:07.0927465", 10, 10.210000000000001 },
                    { 241, 1, "2020-06-01 09:33:07.0927467", 10, 20.41 },
                    { 242, 1, "2020-05-31 09:33:07.092747", 10, 25.420000000000002 },
                    { 243, 1, "2020-05-30 09:33:07.0927473", 10, 26.43 },
                    { 244, 1, "2020-05-29 09:33:07.0927475", 10, 21.460000000000001 },
                    { 245, 1, "2020-05-28 09:33:07.0927478", 10, 20.170000000000002 },
                    { 246, 1, "2020-05-27 09:33:07.0927481", 10, 16.93 },
                    { 247, 1, "2020-05-26 09:33:07.0927485", 10, 15.74 },
                    { 248, 1, "2020-05-25 09:33:07.0927488", 10, 16.600000000000001 },
                    { 249, 1, "2020-05-24 09:33:07.0927491", 10, 14.41 },
                    { 250, 1, "2020-05-23 09:33:07.0927494", 10, 16.32 },
                    { 221, 1, "2020-06-01 09:33:07.092741", 9, 20.41 },
                    { 187, 1, "2020-05-26 09:33:07.0927319", 7, 35.740000000000002 },
                    { 220, 0, "2020-05-23 09:33:07.0927408", 9, 30.210000000000001 },
                    { 218, 0, "2020-05-25 09:33:07.0927402", 9, 20.530000000000001 },
                    { 189, 1, "2020-05-24 09:33:07.0927324", 7, 34.409999999999997 },
                    { 190, 1, "2020-05-23 09:33:07.0927327", 7, 36.32 },
                    { 191, 0, "2020-06-01 09:33:07.0927329", 8, 9.4600000000000009 },
                    { 192, 0, "2020-05-31 09:33:07.0927332", 8, 9.8499999999999996 },
                    { 193, 0, "2020-05-30 09:33:07.0927335", 8, 9.3300000000000001 },
                    { 194, 0, "2020-05-29 09:33:07.0927337", 8, 9.6699999999999999 },
                    { 195, 0, "2020-05-28 09:33:07.092734", 8, 9.7799999999999994 },
                    { 196, 0, "2020-05-27 09:33:07.0927343", 8, 9.0700000000000003 },
                    { 197, 0, "2020-05-26 09:33:07.0927345", 8, 31.359999999999999 },
                    { 198, 0, "2020-05-25 09:33:07.0927348", 8, 9.5299999999999994 },
                    { 199, 0, "2020-05-24 09:33:07.0927351", 8, 9.7300000000000004 },
                    { 200, 0, "2020-05-23 09:33:07.0927353", 8, 40.210000000000001 },
                    { 201, 1, "2020-06-01 09:33:07.0927356", 8, 10.41 },
                    { 202, 1, "2020-05-31 09:33:07.0927359", 8, 10.42 },
                    { 203, 1, "2020-05-30 09:33:07.0927362", 8, 10.43 },
                    { 204, 1, "2020-05-29 09:33:07.0927365", 8, 10.460000000000001 },
                    { 205, 1, "2020-05-28 09:33:07.0927368", 8, 10.17 },
                    { 206, 1, "2020-05-27 09:33:07.092737", 8, 10.93 },
                    { 207, 1, "2020-05-26 09:33:07.0927373", 8, 35.740000000000002 },
                    { 208, 1, "2020-05-25 09:33:07.0927376", 8, 16.600000000000001 },
                    { 209, 1, "2020-05-24 09:33:07.0927378", 8, 14.41 },
                    { 210, 1, "2020-05-23 09:33:07.0927381", 8, 16.32 },
                    { 211, 0, "2020-06-01 09:33:07.0927384", 9, 31.460000000000001 },
                    { 212, 0, "2020-05-31 09:33:07.0927386", 9, 29.850000000000001 },
                    { 213, 0, "2020-05-30 09:33:07.0927389", 9, 25.329999999999998 },
                    { 214, 0, "2020-05-29 09:33:07.0927392", 9, 10.67 },
                    { 215, 0, "2020-05-28 09:33:07.0927395", 9, 40.780000000000001 },
                    { 216, 0, "2020-05-27 09:33:07.0927397", 9, 10.07 },
                    { 217, 0, "2020-05-26 09:33:07.09274", 9, 1.3600000000000001 },
                    { 219, 0, "2020-05-24 09:33:07.0927405", 9, 10.73 },
                    { 121, 1, "2020-06-01 09:33:07.0927076", 4, 13.41 },
                    { 91, 0, "2020-06-01 09:33:07.092699", 3, 9.4600000000000009 },
                    { 119, 0, "2020-05-24 09:33:07.0927068", 4, 15.73 },
                    { 32, 0, "2020-06-02 09:33:07.0926774", 7, 50.549999999999997 },
                    { 33, 4, "2020-06-02 09:33:07.0926776", 7, 1.0 },
                    { 34, 3, "2020-06-02 09:33:07.0926779", 7, 1.0 },
                    { 35, 1, "2020-06-02 09:33:07.0926782", 7, 30.329999999999998 },
                    { 36, 2, "2020-06-02 09:33:07.0926784", 8, 1.0 },
                    { 37, 0, "2020-06-02 09:33:07.0926787", 8, 50.549999999999997 },
                    { 38, 4, "2020-06-02 09:33:07.0926789", 8, 1.0 },
                    { 39, 3, "2020-06-02 09:33:07.0926792", 8, 1.0 },
                    { 40, 1, "2020-06-02 09:33:07.0926794", 8, 30.329999999999998 },
                    { 41, 2, "2020-06-02 09:33:07.0926797", 9, 1.0 },
                    { 42, 0, "2020-06-02 09:33:07.09268", 9, 50.549999999999997 },
                    { 43, 4, "2020-06-02 09:33:07.0926803", 9, 1.0 },
                    { 31, 2, "2020-06-02 09:33:07.0926771", 7, 1.0 },
                    { 120, 0, "2020-05-23 09:33:07.0927073", 4, 3.21 },
                    { 46, 2, "2020-06-02 09:33:07.0926812", 10, 1.0 },
                    { 47, 0, "2020-06-02 09:33:07.0926814", 10, 50.549999999999997 },
                    { 48, 4, "2020-06-02 09:33:07.0926817", 10, 1.0 },
                    { 49, 3, "2020-06-02 09:33:07.0926819", 10, 1.0 },
                    { 50, 1, "2020-06-02 09:33:07.0926822", 10, 30.329999999999998 },
                    { 51, 0, "2020-06-01 09:33:07.0926825", 1, 30.460000000000001 },
                    { 52, 0, "2020-05-31 09:33:07.0926878", 1, 29.850000000000001 },
                    { 53, 0, "2020-05-30 09:33:07.0926881", 1, 5.3300000000000001 },
                    { 54, 0, "2020-05-29 09:33:07.0926884", 1, 50.670000000000002 },
                    { 55, 0, "2020-05-28 09:33:07.0926887", 1, 40.780000000000001 },
                    { 56, 0, "2020-05-27 09:33:07.0926889", 1, 30.07 },
                    { 57, 0, "2020-05-26 09:33:07.0926892", 1, 31.359999999999999 },
                    { 45, 1, "2020-06-02 09:33:07.0926809", 9, 30.329999999999998 },
                    { 30, 1, "2020-06-02 09:33:07.0926768", 6, 31.329999999999998 },
                    { 29, 3, "2020-06-02 09:33:07.0926765", 6, 1.0 },
                    { 28, 4, "2020-06-02 09:33:07.0926763", 6, 1.0 },
                    { 1, 2, "2020-06-02 09:33:07.0926028", 1, 1.0 },
                    { 2, 0, "2020-06-02 09:33:07.0926666", 1, 50.549999999999997 },
                    { 3, 4, "2020-06-02 09:33:07.0926694", 1, 1.0 },
                    { 4, 3, "2020-06-02 09:33:07.0926698", 1, 1.0 },
                    { 5, 1, "2020-06-02 09:33:07.09267", 1, 40.399999999999999 },
                    { 6, 2, "2020-06-02 09:33:07.0926704", 2, 1.0 },
                    { 7, 0, "2020-06-02 09:33:07.0926706", 2, 50.549999999999997 },
                    { 8, 4, "2020-06-02 09:33:07.0926709", 2, 1.0 },
                    { 9, 3, "2020-06-02 09:33:07.0926712", 2, 1.0 },
                    { 10, 1, "2020-06-02 09:33:07.0926714", 2, 30.329999999999998 },
                    { 11, 2, "2020-06-02 09:33:07.0926717", 3, 1.0 },
                    { 12, 0, "2020-06-02 09:33:07.092672", 3, 50.549999999999997 },
                    { 13, 4, "2020-06-02 09:33:07.0926723", 3, 1.0 },
                    { 14, 3, "2020-06-02 09:33:07.0926725", 3, 1.0 },
                    { 15, 1, "2020-06-02 09:33:07.0926728", 3, 30.329999999999998 },
                    { 16, 2, "2020-06-02 09:33:07.0926731", 4, 1.0 },
                    { 17, 0, "2020-06-02 09:33:07.0926733", 4, 50.549999999999997 },
                    { 18, 4, "2020-06-02 09:33:07.0926736", 4, 1.0 },
                    { 19, 3, "2020-06-02 09:33:07.0926738", 4, 1.0 },
                    { 20, 1, "2020-06-02 09:33:07.0926741", 4, 30.329999999999998 },
                    { 21, 2, "2020-06-02 09:33:07.0926743", 5, 1.0 },
                    { 22, 0, "2020-06-02 09:33:07.0926746", 5, 60.549999999999997 },
                    { 23, 4, "2020-06-02 09:33:07.0926749", 5, 1.0 },
                    { 24, 3, "2020-06-02 09:33:07.0926752", 5, 1.0 },
                    { 25, 1, "2020-06-02 09:33:07.0926755", 5, 40.329999999999998 },
                    { 26, 2, "2020-06-02 09:33:07.0926757", 6, 1.0 },
                    { 27, 0, "2020-06-02 09:33:07.092676", 6, 60.549999999999997 },
                    { 58, 0, "2020-05-25 09:33:07.0926895", 1, 20.530000000000001 },
                    { 59, 0, "2020-05-24 09:33:07.0926897", 1, 10.73 },
                    { 44, 3, "2020-06-02 09:33:07.0926806", 9, 1.0 },
                    { 61, 1, "2020-06-01 09:33:07.0926904", 1, 10.41 },
                    { 93, 0, "2020-05-30 09:33:07.0926996", 3, 5.3300000000000001 },
                    { 94, 0, "2020-05-29 09:33:07.0926999", 3, 30.670000000000002 },
                    { 95, 0, "2020-05-28 09:33:07.0927001", 3, 45.780000000000001 },
                    { 96, 0, "2020-05-27 09:33:07.0927004", 3, 30.07 },
                    { 97, 0, "2020-05-26 09:33:07.0927008", 3, 32.359999999999999 },
                    { 98, 0, "2020-05-25 09:33:07.0927011", 3, 25.530000000000001 },
                    { 99, 0, "2020-05-24 09:33:07.0927013", 3, 11.73 },
                    { 100, 0, "2020-05-23 09:33:07.0927016", 3, 31.210000000000001 },
                    { 101, 1, "2020-06-01 09:33:07.0927019", 3, 15.41 },
                    { 102, 1, "2020-05-31 09:33:07.0927021", 3, 25.420000000000002 },
                    { 103, 1, "2020-05-30 09:33:07.0927024", 3, 16.43 },
                    { 104, 1, "2020-05-29 09:33:07.0927027", 3, 11.460000000000001 },
                    { 92, 0, "2020-05-31 09:33:07.0926993", 3, 23.850000000000001 },
                    { 105, 1, "2020-05-28 09:33:07.092703", 3, 50.170000000000002 },
                    { 107, 1, "2020-05-26 09:33:07.0927035", 3, 15.74 },
                    { 108, 1, "2020-05-25 09:33:07.0927038", 3, 6.5999999999999996 },
                    { 109, 1, "2020-05-24 09:33:07.0927041", 3, 24.41 },
                    { 110, 1, "2020-05-23 09:33:07.0927043", 3, 13.32 },
                    { 111, 0, "2020-06-01 09:33:07.0927046", 4, 3.46 },
                    { 112, 0, "2020-05-31 09:33:07.0927049", 4, 29.850000000000001 },
                    { 113, 0, "2020-05-30 09:33:07.0927051", 4, 5.3300000000000001 },
                    { 114, 0, "2020-05-29 09:33:07.0927054", 4, 10.67 },
                    { 115, 0, "2020-05-28 09:33:07.0927058", 4, 40.780000000000001 },
                    { 116, 0, "2020-05-27 09:33:07.092706", 4, 20.07 },
                    { 117, 0, "2020-05-26 09:33:07.0927063", 4, 11.359999999999999 },
                    { 118, 0, "2020-05-25 09:33:07.0927066", 4, 10.529999999999999 },
                    { 60, 0, "2020-05-23 09:33:07.09269", 1, 30.210000000000001 },
                    { 90, 1, "2020-05-23 09:33:07.0926988", 2, 16.32 },
                    { 106, 1, "2020-05-27 09:33:07.0927032", 3, 26.93 },
                    { 63, 1, "2020-05-30 09:33:07.0926911", 1, 6.4299999999999997 },
                    { 89, 1, "2020-05-24 09:33:07.0926985", 2, 14.41 },
                    { 62, 1, "2020-05-31 09:33:07.0926908", 1, 15.42 },
                    { 64, 1, "2020-05-29 09:33:07.0926914", 1, 31.460000000000001 },
                    { 65, 1, "2020-05-28 09:33:07.0926917", 1, 10.17 },
                    { 66, 1, "2020-05-27 09:33:07.092692", 1, 16.93 },
                    { 67, 1, "2020-05-26 09:33:07.0926922", 1, 15.74 },
                    { 68, 1, "2020-05-25 09:33:07.0926925", 1, 16.600000000000001 },
                    { 69, 1, "2020-05-24 09:33:07.0926928", 1, 14.41 },
                    { 70, 1, "2020-05-23 09:33:07.0926931", 1, 16.32 },
                    { 71, 0, "2020-06-01 09:33:07.0926934", 2, 31.460000000000001 },
                    { 72, 0, "2020-05-31 09:33:07.0926936", 2, 25.850000000000001 },
                    { 74, 0, "2020-05-29 09:33:07.0926942", 2, 50.670000000000002 },
                    { 75, 0, "2020-05-28 09:33:07.0926945", 2, 40.780000000000001 },
                    { 73, 0, "2020-05-30 09:33:07.0926939", 2, 5.3300000000000001 },
                    { 77, 0, "2020-05-26 09:33:07.092695", 2, 30.359999999999999 },
                    { 88, 1, "2020-05-25 09:33:07.0926982", 2, 26.600000000000001 },
                    { 87, 1, "2020-05-26 09:33:07.092698", 2, 5.7400000000000002 },
                    { 86, 1, "2020-05-27 09:33:07.0926977", 2, 16.93 },
                    { 85, 1, "2020-05-28 09:33:07.0926974", 2, 10.17 },
                    { 76, 0, "2020-05-27 09:33:07.0926948", 2, 29.07 },
                    { 83, 1, "2020-05-30 09:33:07.0926968", 2, 9.4299999999999997 },
                    { 84, 1, "2020-05-29 09:33:07.0926972", 2, 25.460000000000001 },
                    { 81, 1, "2020-06-01 09:33:07.0926963", 2, 11.41 },
                    { 80, 0, "2020-05-23 09:33:07.092696", 2, 40.210000000000001 },
                    { 79, 0, "2020-05-24 09:33:07.0926957", 2, 5.7300000000000004 },
                    { 78, 0, "2020-05-25 09:33:07.0926953", 2, 20.530000000000001 },
                    { 82, 1, "2020-05-31 09:33:07.0926965", 2, 14.42 }
                });

            migrationBuilder.InsertData(
                table: "Tenants",
                columns: new[] { "TenantId", "Email", "FirstName", "LastName", "PhoneNumber", "UserId" },
                values: new object[,]
                {
                    { 1, "jayson@gmail.com", "Jayson", "Lennon", "555-164-317", 3 },
                    { 2, "david@gmail.com", "David", "Sawyer", "555-195-162", 4 },
                    { 3, "michael@gmail.com", "Michael", "Walker", "555-115-412", 5 },
                    { 4, "sulav@gmail.com", "Sulav", "Aryal", "555-787-595", 6 },
                    { 5, "melvin@gmail.com", "Melvin", "Johnson", "555-858-445", 7 },
                    { 8, "frances@gmail.com", "Frances ", "Hook", "555-871-503", 10 },
                    { 7, "ruth@gmail.com", "Ruth ", "Williams", "555-337-777", 9 },
                    { 9, "linda@gmail.com", "Linda", "Lopez", "555-607-558", 11 },
                    { 10, "regina@gmail.com", "Regina", "McCoy", "555-504-625", 12 },
                    { 6, "deon@gmail.com", "Deon ", "Smith", "555-514-298", 8 }
                });

            migrationBuilder.InsertData(
                table: "Units",
                columns: new[] { "UnitId", "TenantId", "UnitNumber" },
                values: new object[,]
                {
                    { 10, 10, "110" },
                    { 9, 9, "109" },
                    { 8, 8, "108" },
                    { 7, 7, "107" },
                    { 6, 6, "106" },
                    { 4, 4, "104" },
                    { 3, 3, "103" },
                    { 2, 2, "102" },
                    { 1, 1, "101" },
                    { 5, 5, "105" }
                });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "UserId", "ApiKey", "FirstName", "LastName", "LoginName", "Password", "UserAccountType" },
                values: new object[,]
                {
                    { 8, "test-key8", "deon", "", "deon", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Tenant" },
                    { 11, "test-key11", "linda", "", "linda", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Tenant" },
                    { 10, "test-key10", "frances", "", "frances", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Tenant" },
                    { 9, "test-key9", "ruth", "", "ruth", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Tenant" },
                    { 7, "test-key7", "melvin", "", "melvin", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Tenant" },
                    { 12, "test-key12", "regina", "", "regina", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Tenant" },
                    { 5, "test-key5", "michael", "", "michael", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Tenant" },
                    { 4, "test-key4", "david", "", "david", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Tenant" },
                    { 3, "test-key3", "jayson", "", "jayson", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Tenant" },
                    { 2, "test-key2", "manager", "manager", "manager", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Manager" },
                    { 1, "test-key1", "admin", "admin", "admin", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Admin" },
                    { 6, "test-key6", "sulav", "", "sulav", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Tenant" },
                    { 13, "test-key13", "sulav2", "", "sulav2", "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=", "Tenant" }
                });

            migrationBuilder.CreateIndex(
                name: "IX_Units_UnitNumber",
                table: "Units",
                column: "UnitNumber",
                unique: true,
                filter: "[UnitNumber] IS NOT NULL");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Agreements");

            migrationBuilder.DropTable(
                name: "AgreementTemplates");

            migrationBuilder.DropTable(
                name: "BillingPeriods");

            migrationBuilder.DropTable(
                name: "MaintenanceRequests");

            migrationBuilder.DropTable(
                name: "Payments");

            migrationBuilder.DropTable(
                name: "ResourceUsageRates");

            migrationBuilder.DropTable(
                name: "TenantResourceUsages");

            migrationBuilder.DropTable(
                name: "Tenants");

            migrationBuilder.DropTable(
                name: "Units");

            migrationBuilder.DropTable(
                name: "Users");
        }
    }
}
