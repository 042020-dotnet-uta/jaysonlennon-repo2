// <auto-generated />
using System;
using AptMgmtPortal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AptMgmtPortal.Data.AptMgmtMigrations
{
    [DbContext(typeof(AptMgmtDbContext))]
    [Migration("20200523193256_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AptMgmtPortal.Entity.BillingPeriod", b =>
                {
                    b.Property<int>("BillingPeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("PeriodEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("PeriodStart")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BillingPeriodId");

                    b.ToTable("BillingPeriods");
                });

            modelBuilder.Entity("AptMgmtPortal.Entity.MaintenanceRequest", b =>
                {
                    b.Property<int>("MaintenanceRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClosingUserId")
                        .HasColumnType("int");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaintenanceRequestTypeId")
                        .HasColumnType("int");

                    b.Property<string>("OpenNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpeningUserId")
                        .HasColumnType("int");

                    b.Property<string>("ResolutionNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("TimeClosed")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("TimeOpened")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MaintenanceRequestId");

                    b.HasIndex("ClosingUserId");

                    b.HasIndex("MaintenanceRequestTypeId");

                    b.HasIndex("OpeningUserId");

                    b.ToTable("MaintenanceRequests");
                });

            modelBuilder.Entity("AptMgmtPortal.Entity.MaintenanceRequestType", b =>
                {
                    b.Property<int>("MaintenanceRequestTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaintenanceRequestTypeId");

                    b.ToTable("MaintenanceRequestTypes");
                });

            modelBuilder.Entity("AptMgmtPortal.Entity.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("BillingPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentFor")
                        .HasColumnType("int");

                    b.Property<int>("TenentId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("Timepaid")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("PaymentId");

                    b.HasIndex("BillingPeriodId");

                    b.HasIndex("TenentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("AptMgmtPortal.Entity.TenantResourceUsage", b =>
                {
                    b.Property<int>("TenantResourceUsageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ResourceType")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SampleTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TenentId")
                        .HasColumnType("int");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("TenantResourceUsageId");

                    b.HasIndex("TenentId");

                    b.ToTable("TenantResourceUsages");
                });

            modelBuilder.Entity("AptMgmtPortal.Entity.Tenent", b =>
                {
                    b.Property<int>("TenentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TenentId");

                    b.HasIndex("UserId");

                    b.ToTable("Tenents");
                });

            modelBuilder.Entity("AptMgmtPortal.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AptMgmtPortal.Entity.MaintenanceRequest", b =>
                {
                    b.HasOne("AptMgmtPortal.Entity.User", "ClosingUser")
                        .WithMany("ClosingMaintenanceRequests")
                        .HasForeignKey("ClosingUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AptMgmtPortal.Entity.MaintenanceRequestType", "MaintenanceRequestType")
                        .WithMany()
                        .HasForeignKey("MaintenanceRequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AptMgmtPortal.Entity.User", "OpeningUser")
                        .WithMany("OpeningMaintenanceRequests")
                        .HasForeignKey("OpeningUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("AptMgmtPortal.Entity.Payment", b =>
                {
                    b.HasOne("AptMgmtPortal.Entity.BillingPeriod", "BillingPeriods")
                        .WithMany()
                        .HasForeignKey("BillingPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AptMgmtPortal.Entity.Tenent", "Tenent")
                        .WithMany()
                        .HasForeignKey("TenentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AptMgmtPortal.Entity.TenantResourceUsage", b =>
                {
                    b.HasOne("AptMgmtPortal.Entity.Tenent", "Tenent")
                        .WithMany("TenantResourceUsages")
                        .HasForeignKey("TenentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AptMgmtPortal.Entity.Tenent", b =>
                {
                    b.HasOne("AptMgmtPortal.Entity.User", "User")
                        .WithMany("Tenents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
